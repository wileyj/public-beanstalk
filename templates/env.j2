{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Elastic Beanstalk Stack",
    "Parameters": {
        "NotifyMethod": {
            "Type": "String",
            "Default": "email"
        },
        "HealthType": {
            "Type": "String",
            "Default": "enhanced"
        },
        "Environment": {
            "Type": "String",
            "Default": "{{environment}}"
        },
        "InstanceType": {
            "Type": "String",
            "AllowedValues": ["t1.micro", "t2.micro", "t2.small", "m3.medium", "m3.xlarge", "m3.2xlarge", "t2.micro", "t2.medium", "m4.large", "m4.xlarge", "m4.2xlarge", "c4.medium", "c4.xlarge"],
            "Default": "t2.micro"
        },
        "HttpPort": {
            "Type": "String",
            "Default": "80"
        },
        "HttpsPort": {
            "Type": "String",
            "Default": "443"
        },
        "ASGCooldown": {
            "Type": "Number",
            "Default": "300"
        },
        "ASGMonitoringInterval": {
            "Type": "String",
            "Default": "1"
        },
        "ASGEnvironmentType": {
            "Type": "String",
            "Default": "LoadBalanced"
        },
        "ASGRollingUpdateType": {
            "Type": "String",
            "Default": "Health"
        },
        "ASGRollingUpdateEnabled": {
            "Type": "String",
            "Default": "true"
        },
        "ASGMaxBatchSize": {
            "Type": "String",
            "Default": "55"
        },
        "ASGMinInstancesInService": {
            "Type": "String",
            "Default": "{{minsize}}"
        },
        "ASGMeasureName": {
            "Type": "String",
            "Default": "NetworkOut"
        },
        "ASGPeriod": {
            "Type": "String",
            "Default": "1"
        },
        "ASGUnit": {
            "Type": "String",
            "Default": "Bytes"
        },
        "ASGStatistic": {
            "Type": "String",
            "Default": "Average"
        },
        "ASGUpperBreachScaleIncrement": {
            "Type": "String",
            "Default": "1"
        },
        "ASGLowerBreachScaleIncrement": {
            "Type": "String",
            "Default": "-1"
        },
        "ASGBreachDuration": {
            "Type": "String",
            "Default": "1"
        },
        "ASGRootVolumeType": {
            "Type": "String",
            "Default": "gp2"
        },
        "LogPublicationControl": {
            "Type": "String",
            "Default": "true"
        },
        "ELBCrossZone": {
            "Type": "String",
            "Default": "true"
        },
        "ELBTimeout": {
            "Type": "String",
            "Default": "4"
        },
        "ELBCommandTimeout": {
            "Type": "String",
            "Default": "300"
        },
        "ELBBatchSizeType": {
            "Type": "String",
            "Default": "Percentage"
        },
        "ELBBatchSize": {
            "Type": "String",
            "Default": "55"
        },
        "ELBConnectionDrainingEnabled": {
            "Type": "String",
            "Default": "true"
        },
        "ELBConnectionDrainingTimeout": {
            "Type": "String",
            "Default": "20"
        },
        "ELBHealthyThreshold": {
            "Type": "String",
            "Default": "3"
        },
        "ELBUnhealthyThreshold": {
            "Type": "String",
            "Default": "3"
        },
        "ELBInterval": {
            "Type": "String",
            "Default": "5"
        },
        "ELBScheme": {
            "Type": "String",
            "Default": "external"
        }
    },
    "Mappings": {
        "EnvSettings": {
            "{{environment}}": {
                "SSLCert": "arn:aws:iam::{{account}}:server-certificate/{{ssl_cert}}",
                "NotifyArn": "arn:aws:sns:{{region}}:{{account}}:{{sns_topic}}",
                "NotifyTopic": "{{sns_topic}}"
            }
        },
        "VPCNetworkSettings": {
            "us-east-1": {
                "SecurityGroups": "sg-37b66b4f",
                "PublicSubnets": "subnet-9c8156eb,subnet-d8f90881",
                "PrivateSubnets": "subnet-eac678b2,subnet-8bd5b2fd",
                "VPC": "vpc-44f74121"
            }
        },
        "RegionToVpc": {
            "us-east-1": {
                "AvailabilityZone1": "us-east-1a",
                "AvailabilityZone2": "us-east-1d"
            },
            "us-west-1": {
                "AvailabilityZone1": "us-west-1a",
                "AvailabilityZone2": "us-west-1d"
            },
            "us-west-2": {
                "AvailabilityZone1": "us-west-2a",
                "AvailabilityZone2": "us-west-2d"
            }
        }
    },
    "Resources": {
        "ApplicationVersion": {
            "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
            "Properties": {
                "ApplicationName": {"Fn::Join": ["-", ["{{app_group}}", "{{env_name}}", "{{environment}}"]]},
                "Description": {"Fn::Join": [" ", ["{{app_group}}", "{{env_name}}", "{{environment}}", "{{version_label}}"]]},
                "SourceBundle": {
                    "S3Bucket": "{{bucket}}",
                    "S3Key": "{{archive}}"
                }
            }
        },
        "ApplicationEnvironment": {
            "Type": "AWS::ElasticBeanstalk::Environment",
            "Properties": {
                "ApplicationName": {"Fn::Join": ["-", ["{{app_group}}", "{{env_name}}", "{{environment}}"]]},
                "Description": {"Fn::Join": ["-", ["{{app_group}}", "{{env_name}}", "{{environment}}", "{{env_version}}"]]},
                "TemplateName"    : { "Ref" : "ApplicationTemplate" },
                "VersionLabel"    : { "Ref" : "ApplicationVersion" },
                "EnvironmentName": {"Fn::Join": ["-", ["{{app_group}}", "{{env_name}}", "{{environment}}", "{{env_version}}"]]},
                "Tags": [{
                    "Key": "Region",
                    "Value": {"Ref": "AWS::Region"}
                }, {
                    "Key": "Environment",
                    "Value": "{{environment}}"
                }]
            }
        },
        "ApplicationTemplate": {
            "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
            "Properties": {
                "ApplicationName": {"Fn::Join": ["-", ["{{app_group}}", "{{env_name}}", "{{environment}}"]]},
                "Description": {"Fn::Join": [" ", ["{{app_group}}", "{{env_name}}", "{{environment}}", "{{region}}", "{{env_version}}"]]},
                "SolutionStackName": "{{solution_stack}}",
                "OptionSettings": [{
                    "Namespace": "aws:elasticbeanstalk:sns:topics",
                    "OptionName": "Notification Endpoint",
                    "Value": "{{notify_email}}"
                }, {
                    "Namespace": "aws:elasticbeanstalk:sns:topics",
                    "OptionName": "Notification Protocol",
                    "Value": {"Ref": "NotifyMethod"}
                }, {
                    "Namespace": "aws:elasticbeanstalk:sns:topics",
                    "OptionName": "Notification Topic ARN",
                    "Value": {"Fn::FindInMap": ["EnvSettings", { "Ref": "Environment" },"NotifyArn"]}
                }, {
                    "Namespace": "aws:elasticbeanstalk:sns:topics",
                    "OptionName": "Notification Topic Name",
                    "Value": {"Fn::FindInMap": ["EnvSettings", { "Ref": "Environment" }, "NotifyTopic"]}
                }, {
                    "Namespace": "aws:elasticbeanstalk:hostmanager",
                    "OptionName": "LogPublicationControl",
                    "Value": {"Ref": "LogPublicationControl"}
                }, {
                    "Namespace": "aws:elasticbeanstalk:environment",
                    "OptionName": "EnvironmentType",
                    "Value": "LoadBalanced"
                }, {
                    "Namespace": "aws:elasticbeanstalk:command",
                    "OptionName": "Timeout",
                    "Value": {"Ref": "ELBCommandTimeout"}
                }, {
                    "Namespace": "aws:elasticbeanstalk:command",
                    "OptionName": "BatchSizeType",
                    "Value": {"Ref": "ELBBatchSizeType"}
                }, {
                    "Namespace": "aws:elasticbeanstalk:command",
                    "OptionName": "BatchSize",
                    "Value": {"Ref": "ELBBatchSize"}
                }, {
                    "Namespace": "aws:elasticbeanstalk:application",
                    "OptionName": "Application Healthcheck URL",
                    "Value": "{{healthcheck}}"
                }, {
                    "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                    "OptionName": "SystemType",
                    "Value": {"Ref": "HealthType"}
                }, {
                    "Namespace": "aws:elasticbeanstalk:environment",
                    "OptionName": "ServiceRole",
                    "Value": "{{service_role}}"
                }, {
                    "Namespace": "aws:ec2:vpc",
                    "OptionName": "VPCId",
                    "Value": {"Fn::FindInMap": ["VPCNetworkSettings", {"Ref": "AWS::Region"}, "VPC"]}
                }, {
                    "Namespace": "aws:ec2:vpc",
                    "OptionName": "Subnets",
                    "Value": {"Fn::FindInMap": ["VPCNetworkSettings", {"Ref": "AWS::Region"}, "PrivateSubnets"]}
                }, {
                    "Namespace": "aws:ec2:vpc",
                    "OptionName": "ELBSubnets",
                    "Value": {"Fn::FindInMap": ["VPCNetworkSettings", {"Ref": "AWS::Region"}, "PublicSubnets"]}
                {{elbtype}}
                }, {
                    "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                    "OptionName": "RollingUpdateType",
                    "Value": {"Ref": "ASGRollingUpdateType"}
                }, {
                    "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                    "OptionName": "RollingUpdateEnabled",
                    "Value": {"Ref": "ASGRollingUpdateEnabled"}
                }, {
                    "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                    "OptionName": "MaxBatchSize",
                    "Value": {"Ref": "ASGMaxBatchSize"}
                }, {
                    "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                    "OptionName": "MinInstancesInService",
                    "Value": {"Ref": "ASGMinInstancesInService"}
                }, {
                    "Namespace": "aws:autoscaling:trigger",
                    "OptionName": "MeasureName",
                    "Value": {"Ref": "ASGMeasureName"}
                }, {
                    "Namespace": "aws:autoscaling:trigger",
                    "OptionName": "LowerThreshold",
                    "Value": "{{lower}}"
                }, {
                    "Namespace": "aws:autoscaling:trigger",
                    "OptionName": "UpperThreshold",
                    "Value": "{{upper}}"
                }, {
                    "Namespace": "aws:autoscaling:trigger",
                    "OptionName": "Period",
                    "Value": {"Ref": "ASGPeriod"}
                }, {
                    "Namespace": "aws:autoscaling:trigger",
                    "OptionName": "Unit",
                    "Value": {"Ref": "ASGUnit"}
                }, {
                    "Namespace": "aws:autoscaling:trigger",
                    "OptionName": "Statistic",
                    "Value": {"Ref": "ASGStatistic"}
                }, {
                    "Namespace": "aws:autoscaling:trigger",
                    "OptionName": "UpperBreachScaleIncrement",
                    "Value": {"Ref": "ASGUpperBreachScaleIncrement"}
                }, {
                    "Namespace": "aws:autoscaling:trigger",
                    "OptionName": "LowerBreachScaleIncrement",
                    "Value": {"Ref": "ASGLowerBreachScaleIncrement"}
                }, {
                    "Namespace": "aws:autoscaling:trigger",
                    "OptionName": "BreachDuration",
                    "Value": {"Ref": "ASGBreachDuration"}
                }, {
                    "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                    "OptionName": "MinInstancesInService",
                    "Value": {"Ref": "ASGMinInstancesInService"}
                }, {
                    "Namespace": "aws:autoscaling:launchconfiguration",
                    "OptionName": "InstanceType",
                    "Value": "{{instance}}"
                }, {
                    "Namespace": "aws:autoscaling:launchconfiguration",
                    "OptionName": "RootVolumeType",
                    "Value": {"Ref": "ASGRootVolumeType"}
                }, {
                    "Namespace": "aws:autoscaling:launchconfiguration",
                    "OptionName": "EC2KeyName",
                    "Value": "{{key_name}}"
                }, {
                    "Namespace": "aws:autoscaling:launchconfiguration",
                    "OptionName": "SecurityGroups",
                    "Value": {"Fn::FindInMap": ["VPCNetworkSettings", {"Ref": "AWS::Region"}, "SecurityGroups"]}
                }, {
                    "Namespace": "aws:autoscaling:asg",
                    "OptionName": "MinSize",
                    "Value": "{{minsize}}"
                }, {
                    "Namespace": "aws:autoscaling:asg",
                    "OptionName": "MaxSize",
                    "Value": "{{maxsize}}"
                }, {
                    "Namespace": "aws:autoscaling:asg",
                    "OptionName": "Cooldown",
                    "Value": {"Ref": "ASGCooldown"}
                }, {
                    "Namespace": "aws:autoscaling:asg",
                    "OptionName": "Availability Zones",
                    "Value": "Any 2"
                }, {
                    "Namespace": "aws:elb:loadbalancer",
                    "OptionName": "CrossZone",
                    "Value": {"Ref": "ELBCrossZone"}
                }, {
                    "Namespace": "aws:elb:loadbalancer",
                    "OptionName": "LoadBalancerHTTPPort",
                    "Value": {"Ref": "HttpPort"}
                }, {
                    "Namespace": "aws:elb:healthcheck",
                    "OptionName": "HealthyThreshold",
                    "Value": {"Ref": "ELBHealthyThreshold"}
                }, {
                    "Namespace": "aws:elb:healthcheck",
                    "OptionName": "UnhealthyThreshold",
                    "Value": {"Ref": "ELBUnhealthyThreshold"}
                }, {
                    "Namespace": "aws:elb:healthcheck",
                    "OptionName": "Interval",
                    "Value": {"Ref": "ELBInterval"}
                }, {
                    "Namespace": "aws:elb:healthcheck",
                    "OptionName": "Timeout",
                    "Value": {"Ref": "ELBTimeout"}
                }, {
                    "Namespace": "aws:elb:policies",
                    "OptionName": "ConnectionDrainingEnabled",
                    "Value": {"Ref": "ELBConnectionDrainingEnabled"}
                }, {
                    "Namespace": "aws:elb:policies",
                    "OptionName": "ConnectionDrainingTimeout",
                    "Value": {"Ref": "ELBConnectionDrainingTimeout"}
                }, {
                    "Namespace": "aws:autoscaling:launchconfiguration",
                    "OptionName": "ImageId",
                    "Value": "{{ami_image}}"
                }, {
                    "Namespace": "aws:autoscaling:launchconfiguration",
                    "OptionName": "IamInstanceProfile",
                    "Value": "{{iam_role}}"
                }, {
                    "Namespace": "aws:elasticbeanstalk:application:environment",
                    "OptionName": "REGION",
                    "Value": {"Ref": "AWS::Region"}
                    {{env_vars}}
                }]
            }
        },
        "DNSRecordGlobal": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneName": {"Fn::Join": ["", ["{{region_short}}", ".", "{{domain}}", "."]]},
                "Comment": {"Fn::Join": [" ", [{"Fn::Join": ["-", ["{{env_name}}", "{{environment}}", "{{env_version}}"]]}, "CNAME Entry"]]
            },
            "Name": {"Fn::Join": [".", [{"Fn::Join": ["-", ["{{env_name}}", "{{environment}}", "{{env_version}}"]] },"{{region_short}}","{{domain}}"]]},
                "Type": "CNAME",
                "TTL": "900",
                "ResourceRecords": [{"Fn::GetAtt": ["ApplicationEnvironment", "EndpointURL"]}]
            }
        }
    },
    "Outputs": {
        "Stack": {
            "Description": "Stack",
            "Value": {"Ref": "AWS::StackId"}
        },
        "LBEndpoint": {
            "Description": "DNS Record",
            "Value": {"Fn::Join": ["", ["http://", {"Fn::GetAtt": ["ApplicationEnvironment", "EndpointURL"]}]]}
        },
        "DNSRecordGlobal": {
            "Description": "Global DNS Name",
            "Value": {"Ref": "DNSRecordGlobal"}
        },
        "Environment": {
            "Description": "Environment",
            "Value": "{{environment}}"
        },
        "SNSAddress": {
            "Description": "SNSAddress",
            "Value": "{{notify_email}}"
        },
        "VPCId": {
            "Description": "VPCId",
            "Value": {"Fn::FindInMap": ["VPCNetworkSettings", {"Ref": "AWS::Region"}, "VPC"]}
        },
        "AppName": {
            "Description": "AppName",
            "Value": {"Fn::Join": ["-", ["{{env_name}}", "{{environment}}", "{{env_version}}"]]}
        }
    }
}
